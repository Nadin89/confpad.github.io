conference:

  name: Assert(js) 2018
  status: complete
  series: assertjs.com
  tags:
    - javascript
    - testing
    -
  link:
    twitter: assertjs
    playlist:
    website: https://www.assertjs.com/
  date:
    from: 2018-02-22
    to: 2018-02-22
  location:
    country: United States
    city: San Antonio, TX
  description: |-
    Assert(js) Testing Conference is a one-day, single-track conference with a laser focus on testing for JavaScript developers - both UI and Node.js.

talks:

  - title: Building a testing- and quality-driven culture at IBM
    lang: en
    type: regular
    time: 2018-02-22
    authors:
      - name: Jason Lengstorf
        twitter: jlengstorf
        github:
        website:
    slides:
    videos:
      - https://youtu.be/zqdCM8zR6Mc
    description: |-
      How can we create a performance-, quality-, and test-driven culture when the company has years of bad habits to break? Is it even possible? In this talk, learn how IBM has been steering its massive engineering team away from deep-seated resistance to writing tests — or collecting code quality metrics of any kind — through a combination of automation, human psychology, socialization, and education.

  - title: Establishing testing patterns with software design principles
    lang: en
    type: regular
    time: 2018-02-22
    authors:
      - name: Aaron Abramov
        twitter: aarondjents
        github:
        website:
    slides:
    videos:
      - https://youtu.be/_pnW-JjmyXE
    description: |-
      Lack of clarity about testing React applications leads engineers to write low-quality tests that don’t catch bugs, break unnecessarily, and are hard to write; therefore, we need established patterns to write tests for single page applications, just as there are established patterns to write single page applications.

  - title: BDD with cucumber.js
    lang: en
    type: regular
    time: 2018-02-22
    authors:
      - name: Ryan Marsh
        twitter: ryan_marsh
        github: ryanwmarsh
        website:
    slides:
    videos:
      - https://youtu.be/L3rHsE-nA78
    description: |-
      Hundreds of teams are benefitting from BDD (Behavior Driven Development). This brief talk will familiarize you with what BDD is and isn’t so you can decide if it’s right for your team.

  - title: I see your point, but…
    lang: en
    type: regular
    time: 2018-02-22
    authors:
      - name: Brian Mann
        twitter: be_maan
        github:
        website:
      - name: Gleb Bahmutov
        twitter: bahmutov
        github:
        website:
    slides:
    videos:
      - https://youtu.be/5XQOK0v_YRE
      - https://youtu.be/5FnalKRjpZk
    description: |-
      These two speakers work together making awesome testing tools, yet they often disagree on how to produce high quality software. In this presentation they will respectfully argue about: test-driven development vs end to end tests / stubs and mocks / cross-browser testing / code and data coverage / picking the right test framework / snapshot testing / legacy browser environment support / crash reporting and performance monitoring / earning living by writing OSS testing tools.

  - title: Testing against time in JavaScript applications
    lang: en
    type: regular
    time: 2018-02-22
    authors:
      - name: Jessica Jordan
        twitter: jjordan_dev
        github:
        website:
    slides:
    videos:
      - https://youtu.be/3cicU6IxclY
    description: |-
      As our apps become more complex, we might stumble into testing errors stemming from asynchronous and time-dependent behaviour. This talk will characterize several roadblocks in testing which are affected by time. With an example Ember.js application, we will explore how Ember's rich testing API, newest JavaScript features and community libraries, will help us writing legible and reliable tests and how we can make those tests turn green even as time passes by.

  - title: Detox A year in. Building it, Testing with it
    lang: en
    type: regular
    time: 2018-02-22
    authors:
      - name: Rotem Mizrachi-Meidan
        twitter: rotemmiz
        github:
        website:
    slides:
    videos:
      - https://youtu.be/Dy8VP02quMs
    description: |-
      A year in, developing and using Detox in production taught us a lot. From designing its API, to consuming it, testing real user scenarios to advanced mocking, we learned what makes sense when E2E testing an app and what doesn’t. In this talk, we’ll discuss how Detox works and what makes it deterministic, cover some advanced use cases and methodologies, go over new features and tease the ones that are upcoming.

  - title: Testing React Applications
    lang: en
    type: regular
    time: 2018-02-22
    authors:
      - name: Mary Snow
        twitter: ThisIsMaryCodes
        github: Mary-Snow
        website:
    slides:
    videos:
      - https://youtu.be/BZZlTOYjHrY
    description: |-
      React continues to grow in popularity, especially with the release of React 16. Developers who love using React may be at a loss of how to test their React applications. In this talk we will explore how to use Enzyme and JSDOM to test your modern React applications. We will dive into Enzyme testing and explore how to test both the DOM and virtual DOM by using Enzyme's core methods: shallow, render and mount.

  - title: Please don’t mock me
    lang: en
    type: regular
    time: 2018-02-22
    authors:
      - name: Justin Searls
        twitter: searls
        github:
        website:
    slides:
    videos:
      - https://youtu.be/Af4M8GMoxi4
    description: |-
      Confusion over test doubles starts with what to even call them. You might know them as stubs, proxies, mocks, or spies (but I call them test doubles, because a book you've probably never read declared it to be the most general term). I've spent a decade fascinated by the disconnect between why test double libraries were invented and how they are actually used by teams. What I've learned: their purpose fills a little-known but valuable niche, whereas their appeal addresses a mainstream but self-destructive impulse. If you don't leave this talk with a clearer distinction between tests that ensure safe changes versus tests that promote simple designs, I'll give you your 45 minutes back. Once that groundwork is laid, you'll better understand the characteristics that matter most in a test double library and the nuanced rules that should govern their use. I've found this clarity invaluable for producing valuable tests and maintainable code, and I think you will too.

  - title: Testing Angular Components Fundamentals
    lang: en
    type: regular
    time: 2018-02-22
    authors:
      - name: Jesse Palmer
        twitter: jesselpalmer
        github:
        website:
    slides:
    videos:
      - https://youtu.be/KVjaVHZG32w
    description: |-
      In the Angular world, the most common concept that you stumble upon is components. Since components are everywhere, it is critical that you understand how to test them. In this talk, you will learn the fundamentals of how to test Angular components. By the end of the talk, you will have the confidence to start writing tests for your components.

  - title: Write tests. Not too many. Mostly integration.
    lang: en
    type: regular
    time: 2018-02-22
    authors:
      - name: Kent C. Dodds
        twitter: kentcdodds
        github:
        website:
    slides:
    videos:
      - https://youtu.be/Fha2bVoC8SE
    description: |-
      Automated tests are an important part of raising your confidence when releasing software. They can speed you up or slow you down depending on how you write them and which form of testing you focus your test writing on. In this talk, we’ll cover the value of automated testing and where your efforts should be focused to strike the best balance of confidence and effort.

  - title: Working Well, The Future of JavaScript Testing
    lang: en
    type: regular
    time: 2018-02-22
    authors:
      - name: Trent Willis
        twitter: trentmwillis
        github:
        website:
    slides:
    videos:
      - https://youtu.be/4PYBE-c53-M
    description: |-
      One of the primary goals for testing software is to have confidence that your software works as intended, but this doesn't give much insight into the quality of the software. Is it performant? Does the design look right? Are we sending too much code? Answering these questions in an automated fashion today is hard, but that will be changing in the future. In this talk, we'll explore how recent changes in technology give us a foundation to start answering the questions posed above and so much more. We'll look at a near future where we have confidence that our software is functional and works well.
