conference:

  name: JSDayES 2018
  status: complete
  series: jsday.es
  tags:
    - javascript
    -
    -
  link:
    twitter: jsdayes
    videos:
    website: https://2018.jsday.es/
  date:
    from: 2018-10-20
    to: 2018-10-20
  location:
    country: Spain
    city: Madrid
  description: |-
    Para muchos de nosotros, el desarrollo web es, simplemente, apasionante. Estar al tanto de las √∫ltimas tendencias en desarrollo, los √∫ltimos cambios de nuestro framework de cabecera o incluso de sus competidores, son parte de nuestro d√≠a a d√≠a. Por ese motivo, seguramente, est√°s ahora leyendo este art√≠culo en el blog de JSDayES.

talks:

  - title: Just keep swimming
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Catalina Oyaneder
        twitter: cataflu
        github: cat2608
        website: http://cataflu.com/
    slides:
    videos:
      - https://youtu.be/ME2udmhXjKU
    description: |-
      ¬øAlguna vez has sentido que el mundillo dev te supera? ¬øCuando vuelves de comer, miras a ver si ha salido un nuevo framework, el cu√°l ya vas tarde en dominar? ¬øSientes que no te da la vida para estar al d√≠a de todo lo que crees que deber√≠as saber? ¬øTe comparas con gente que consideras crack y te preguntas si deber√≠as estar all√≠? ¬°Pues a m√≠ tambi√©n me pasa! Esta charla de t√∫ a t√∫ vamos a relativizar lo cotidiano, darnos cuenta de nuestros puntos fuertes y ver que, mirando con perspectiva, cada d√≠a somos mejores :)

  - title: Creando las aplicaciones web del futuro, hoy
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Eduardo Sada
        twitter: aeroalquimia
        github:
        website:
      - name: Cristina Ponce Torres
        twitter: CristinaGrim
        github:
        website:
    slides:
    videos:
      - https://youtu.be/UBwZBS-_iAM
    description: |-
      Crearemos una aplicaci√≥n web con las √∫ltimas tecnolog√≠as disponibles ¬´El sue√±o de cualquier programador Front-End¬ª; demostraremos las ventajas de estar a la moda exprimiendo al l√≠mite la disponibilidad de las API de los navegadores, pero teniendo en cuenta el poco soporte de aquellos m√°s antiguos.

  - title: TensorFlow.js FullStack Machine Learning
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Laura Morillo
        twitter: Laura_Morillo
        github:
        website:
      - name: Luis Taleg√≥n
        twitter: Luisetex
        github:
        website:
    slides:
    videos:
      - https://youtu.be/qruLax3zLUY
    description: |-
      TensorFlow ha conseguido acercar Machine Learning a profesionales y entusiastas de la tecnolog√≠a en todo el mundo sin necesidad de ser un experto en Data Science.Sin embargo, hasta hace poco, est√°bamos limitados a usarlo en el servidor y programar en Python, Java o C++. Pero ahora eso ha cambiado. Gracias a TensorFlow.js podemos emplear esta librer√≠a para entrenar o utilizar nuestros modelos tanto en cliente como en servidor y siempre en Javascript.En esta charla realizaremos una introducci√≥n al mundo de Machine Learning y de TensorFlow y ense√±aremos ejemplos de c√≥mo podemos utilizarlo en nuestras aplicaciones para que al terminar est√©is deseando llegar a casa para probarlo.

  - title: V8 conoce al enemigo
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Diego Lafuente Garcia
        twitter: tufosa
        github: DiegoTUI
        website:
    slides:
    videos:
      - https://youtu.be/QWNhHVLBuD8
    description: |-
      Vivimos c√≥modamente recostados sobre la infinidad de colchones que suponen los frameworks y las capas de abstracci√≥n sobre las que trabajamos. Son tantos, y tan mullidos, que si alguien metiese una sand√≠a entre el primer y segundo colch√≥n, no lo notar√≠amos. Creo que es necesario levantarse de vez en cuando de tan c√≥modo catre, quitar todos los colchones y ver de qu√© est√° hecho el somier. Os propongo un viaje de vuelta a lo b√°sico que nos permita responder algunas de las preguntas que ya casi no sabemos formular ¬øqu√© tipo de m√°quina es en realidad un ordenador? ¬øpara qu√© sirve un programa? ¬øy un lenguaje de programaci√≥n? ¬øpor qu√© hay tantos? ¬øen qu√© se diferencia la Cocacola Zero sin cafe√≠na de la leche desnatada sin lactosa?Nos centraremos en el caso de Javascript compilado con V8, que b√°sicamente cubre Node.js y la mayor√≠a de los navegadores modernos. El rendimiento de una aplicaci√≥n depende enormemente del c√≥digo m√°quina generado a partir de las l√≠neas de c√≥digo que escribimos. Veremos en qu√© se transforman nuestras l√≠neas de c√≥digo y algunas directrices para que la traducci√≥n de nuestro c√≥digo al lenguaje nativo de la m√°quina sea m√°s eficiente. Las ineficiencias en el fondo son bugs que suelen costar mucho dinero, pero son muy dif√≠ciles tanto de identificar como de solucionar. Descubriremos un par de herramientas que nos facilitan mucho la vida a la hora de hacerlo. Y lo m√°s importante de todo: si me da tiempo, contar√© el chiste de la vaca en Javascript.

  - title: Construir con JS una AI para jugar al ajedrez en 40 minutos
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Gonzalo Ruiz de Villa
        twitter: gruizdevilla
        github:
        website:
    slides:
      - https://slides.com/gruizdevilla/chess
    videos:
      - https://youtu.be/NUqXAFTqBmw
    description: |-
      Challenge construir con JavaScript vanilla, en ‚è≥ 40 minutos y en directo üî¥una inteligencia artificial ü§î que juegue razonablemente* bien al ‚ôò Ajedrez, capaz de ganar al menos al autor de la AI.

  - title: Front performance
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Ana Encinar
        twitter: jnisabe
        github:
        website:
    slides:
    videos:
      - https://youtu.be/Lw1H9Owj2Mo
    description: |-
      Con el avance de los dispositivos tecnol√≥gicos y el aumento de capacidad de estos, parecer√≠a que, en la actualidad, cualquier cosa vale a la hora de desarrollar una p√°gina web. As√≠ que... ¬øc√≥mo podemos conseguir un buen desarrollo?¬øFramework vs nativo? ¬øProgramaci√≥n funcional? ¬øTiempos de procesamiento? ¬øMemoria reservada? Un detalle m√≠nimo puede inducirnos a cometer errores que ning√∫n navegador perdonar√≠a. Por ello no podemos olvidar la importancia de la performance, es fundamental repasar todo aquello que puede hacer peligrar nuestra web.Esta charla se centra en los aspectos que muchas veces olvidamos o no tenemos en cuenta a la hora de desarrollar, mi intenci√≥n es mostrar todo esto con demos en vivo.

  - title: Generators ¬øun Hummer en el establo?
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Pedro Palao
        twitter:
        github:
        website:
      - name: Federico Badiola
        twitter:
        github:
        website:
    slides:
    videos:
      - https://youtu.be/fMZ5t8GcEpg
    description: |-
      Los generadores/iteradores son una de las grandes caracter√≠sticas de ES2015. No es un cambio de librer√≠a (como Promise) sino de sintaxis. No es un azucar sint√°ctica (como class) con una traducci√≥n relativamente directa, sino que implica un soporte nada trivial en el compilador, o unas traduciones sofisticadas en los transpilers.Sin embargo, hay muy poca informaci√≥n en Internet. Los ejemplos de uso siempre son los mismos (fundamentalmente simular async/await con yield). Muy pocos proyectos los adoptan y algunos mayoritarios los han vetado. En definitiva, provocan poco inter√©s. En contraste con lo anterior, para ES2018 llegan los generadores/iteradores asincronos. ¬øQu√© pasa entonces con los generadores? ¬øSon un elemento de nicho? ¬øSe pusieron en JavaScript para no ser menos que otros (p.e. Python)? ¬øSon aprovechables para nuestro d√≠a a d√≠a?En esta charla intentaremos desvelar toda la potencia que dan los generadores. Contaremos qu√© es un iterador, qu√© es un generador, la potencia del for/of c√≥mo llegar a las clases ocultas que los implementan (obligatorias por el est√°ndar), c√≥mo extenderlas para hacer programaci√≥n de orden superior sobre generadores, qu√© son las corutinas, c√≥mo aprovecharlas para ciertos problemas que tienen estado, c√≥mo son los nuevos generadores as√≠ncronos y el for/await/of, qu√© relaci√≥n hay entre funciones as√≠ncronas, generadores y generadores as√≠ncronos, etc.

  - title: Muerte a las librer√≠asJS
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: H√©ctor Moreno
        twitter: Hecmocerpro
        github: hecmocer-pro
        website: https://hecmocer-pro.github.io/
    slides:
    videos:
      - https://youtu.be/N5PJXBPx4Qg
    description: |-
      Yo uso JQuery para acceder al DOM desde javascript. Yo uso AngularJS para tener databinding en HTML desde javascript.Yo uso Polymer para crear WebComponents desde javascript.¬øY si te dijera que no necesitas una librer√≠a para eso?¬øY si no necesitases descargar 700Kb de c√≥digo ni aprender los entresijos de las librer√≠as para hacer aplicaciones chulas?El javascript moderno es m√°s potente de lo que creemos. Existen montones de APIs muy potentes disponibles directamente en nuestro navegador en la mejor librer√≠a de todas Vanilla Javascript.

  - title: The Big Fails Theory
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Marta Fonda
        twitter: MartaFonda
        github: martafonda
        website: http://www.martafonda.com/
    slides:
    videos:
      - https://youtu.be/u4j5U8ldrcI
    description: |-
      Elegir una arquitectura o un stack determinado no es nada f√°cil. ¬øQu√© variables deber√≠amos tener en cuenta para tomar estas decisiones? ¬øEs posible evitar los errores? Lo descubriremos en esta charla.

  - title: Algoritmos cu√°nticos para JavaScripters
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Jes√∫s P√©rez
        twitter: jesusprubio
        github: jesusprubio
        website:
    slides:
      - https://slides.com/jesusprubio/quantum-for-javascripters/fullscreen#/
    videos:
      - https://youtu.be/0trvK-DDfF0
    description: |-
      Tras una rapid√≠sima introducci√≥n a la computaci√≥n cu√°ntica veremos como sacar partido de los avances actuales desde tu aplicaci√≥n en Node.js/JavaScript de la forma m√°s sencilla posible.Para ello, durante la conferencia, publicaremos la primera versi√≥n estable de la librer√≠a Qiskit.js. La cual creemos que solventa los principales problemas que nos encontramos los desarrolladores con las alternativas existentes:-  Dise√±adas por y para investigadores, por lo que la curva de aprendizaje no es nada divertida para nosotros.-  Escritas en Python, pero todos sabemos que Internet est√° hecho en JavaScript wink:

  - title: ¬øC√≥mo funciona un Virtual DOM?
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Rub√©n Valseca
        twitter: rubnvp
        github: rubnvp
        website:
    slides:
      - https://docs.google.com/presentation/d/1Eq95XNOaxlWTIKRDj62NGXy6DRmiacQ7PYUGP1zjVwQ/
    videos:
      - https://youtu.be/yFE4iWkrI2Y
    description: |-
      Utilizado por las librer√≠as mas famosas como React y Vue, el Virtual DOM sigue siendo una de las partes mas ocultas y "m√°gicas" dentro de las mismas.Su principal labor es aumentar el rendimiento de nuestra aplicaci√≥n a trav√©s de un renderizado m√°s eficiente pero... ¬øc√≥mo lo consigue? ¬øc√≥mo funciona realmente por dentro?En esta charla tratar√© de explicar de donde sali√≥ la idea de tener un Virtual DOM, c√≥mo funciona y c√≥mo este ha ido evolucionando en sus distintas implementaciones. Veremos tambi√©n una peque√±a implementaci√≥n del mismo donde se le ver√° en acci√≥n y finalizaremos con una serie de conclusiones a considerar si usamos una librer√≠a que lo implemente.

  - title: Aterrizando en JS consejos para [node]sesperar en el intento
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Esther Lozano
        twitter: esloho
        github:
        website:
    slides:
      - https://www.slideshare.net/esloho/
    videos:
      - https://youtu.be/igtw2C5gb3E
    description: |-
      Cuando pas√© de desarrollar en Java a adentrarme en el para m√≠ desconocido mundo JS mi d√≠a era una sucesi√≥n de "pero... wtf is this?" (pun intended). Con el tiempo, lecturas varias y la paciente ayuda de mis compis fui viendo la luz de la mano de Node, Typescript (¬°no sin mis tipos!) y dem√°s amigas del festival JS. Porque no, JS no es malvado... s√≥lo rarito de conocer :P As√≠ que para quien a√∫n mire a JS con recelo o quiera repasar algunos de sus aspectos clave, os traigo una serie de consejos que, espero, os hagan ver JS con mejores ojos.

  - title: Stencil from frameworks to compilers
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Manuel Martinez-Almeida
        twitter: manucorporat
        github: manucorporat
        website:
    slides:
      - https://github.com/manucorporat/stencil-framework-to-compiler/
    videos:
      - https://youtu.be/y85ghhCrBME
    description: |-
      or years, developers have been working with low level tools when building for the Web. Dealing with the complexity of CSS, the verbose nature of HTML, and the never ending amount of JavaScript. Enter Stencil. Stencil is a build tool for authoring highly optimized web components. We'll look at the basics of what Stencil can do and dive in the extra benefits of having a compiler for HTML.

  - title: it('should be easier') Testing automatizado en el mundo real
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Paqui Calabria
        twitter: Zurribulle
        github:
        website:
    slides:
      - https://slides.com/paquicalabria/itshouldbeeasy#/
    videos:
      - https://youtu.be/Vn408golSxA
    description: |-
      TDD, BDD, code coverage, karma, jest, chai... el mundo de los test automatizados est√° lleno de herramientas, frameworks y filosof√≠as, pero quiz√° tantos √°rboles no nos dejan ver el bosque. ¬øQu√© sentido tiene el testing en el desarrollo? ¬øDe verdad compensa el tiempo dedicado a escribirlos? ¬øC√≥mo escribir tests realmente √∫tiles? Consejos y buenas pr√°cticas para (y desde) el d√≠a a d√≠a.

  - title: 3D virtual puppet remote controlled with smartphone
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Gorka Ludlow
        twitter: AquiGorka
        github: AquiGorka
        website: http://aquigorka.com/
    slides:
    videos:
      - https://youtu.be/m-1iidVTY58
    description: |-
      I will describe the process and challenges when I undertook the development of Puppets (github.com/AquiGorka/puppets).I will describe the process and challenges when I undertook the development of Puppets (github.com/AquiGorka/puppets).A mobile webapp that reads data from a smartphone's gyroscope and sends it to the webapp.Using WebRTC I connected both apps and the control bar on top of the puppet mimics the smartphone's orientation in real time to remote control the puppet‚Äìwhich reacts accordingly thanks to the physics being applied.

  - title: Escribiendo Service Workers con Workbox
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Pablo Magaz
        twitter: pablo_magaz
        github: pmagaz
        website: http://www.pablomagaz.com/
    slides:
      - https://pablomagaz.com/static/slides/
    videos:
      - https://youtu.be/GjXwJdYa3J4
    description: |-
      Los serviceWorker son sin duda el coraz√≥n de las, cada vez m√°s populares Progressive Web Apps. Workbox es la librer√≠a creada por Google que simplifica de forma notable la escritura de service workers mediante una API potente y sencilla. A lo largo de la charla veremos c√≥mo escribir service workers para nuestra PWA y c√≥mo afrontar, con Workbox , desde sencillas estrategias de caching que agilicen nuestras PWA, hasta tareas m√°s complejas como la sincronizaci√≥n en segundo plano o el empleo y escritura de plugins.

  - title: Vanilla JS Graphics and Animations
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Ibon Tolosana
        twitter: hyperandroid
        github:
        website:
    slides:
    videos:
      - https://youtu.be/BYztulUzY4k
    description: |-
      Una charla introductoria a la generaci√≥n de gr√°ficos y animaci√≥n con vanilla javascript. Coordenadas homog√©neas, composici√≥n de transformaciones, easing, t√©cnicas de animaci√≥n, tessellation, clip, masks, shaders ... todo desde el concepto hasta su ejecuci√≥n final. Todo coloridos ejemplos propios como.

  - title: Mastering UIs with Finite State Machines
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: Rub√©n Sospedra
        twitter: sospedra_r
        github:
        website:
    slides:
      - https://github.com/sospedra/talks/blo
    videos:
      - https://youtu.be/rltGBd_tMks
    description: |-
      Did you ever feel like monkey patching your UI component? Adding too many if/else, handling a lot of complexity or hacking several non-desired side effects. Did you ever have a problem with double-clicking an async button? Fetching multiple times the same resource in a row? Did you have problems translating UX interfaces and mock-ups into your applications scenes?All this kind of problems can be properly fixed by applying a different point of view. An architecture based upon Mealy state machines. Also known as finite state machines or automatas. These machines are deterministic, pure and idempotents. Opening a new set of possibilities from predictable components to autogenerated tests.

  - title: Advanced JavaScript patterns
    lang: es
    type: regular
    time: 2018-10-20
    authors:
      - name: C√©sar Alberca
        twitter: cesalberca
        github: cesalberca
        website:
    slides:
      - https://docs.google.com/presentation/d/1LEWc3ErrzjaN3nzlsMtGVx1QKGsc8G2mgw-qP-WZhJo/edit#slide=id.p
    videos:
      - https://youtu.be/aNf1Oos0ZB8
    description: |-
      When you tell people you code in JavaScript they usually look down on you. This talk will give you the tools to enlighten those heretics. We'll be entering the world of design patterns applied to JavaScript, looking through some of the cutting edge properties of ES6 such as Proxies and default function parameter expressions, dealing with objects and even some examples of functional programming. This talk is not allowed for cardiacs.
